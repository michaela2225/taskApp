{"version":3,"sources":["localStorage/storage.js","components/employeeCard/EmployeeCard.js","store/employeeReducer/constants.js","store/employeeReducer/action.js","components/employeeList/EmployeesList.js","components/employeeDOBList/EmployeesDOBList.js","constants.js","store/employeeReducer/reducer.js","API/helper.js","store/employeeReducer/selector.js","employeesPage/employeesPage.js","store/employeeReducer/thunk.js","App.js","store/store.js","index.js"],"names":["key","EmployeeCard","firstName","lastName","showDateBirthday","onChange","highlightEmployee","className","id","type","name","defaultChecked","htmlFor","SET_FINAL_LIST_EMPLOYEE","UPDATE_FINAL_LIST_EMPLOYEE","setFinalListEmployee","data","EmployeesList","employeesList","dispatch","useDispatch","map","item","letter","employees","length","employee","flag","DateDOBList","employeesDobList","employeesWithDob","push","month","dob","split","find","e","filter","sort","first","second","index","employeesWithLetter","setToLocal","value","localStorage","setItem","JSON","stringify","initialState","finalListEmployee","parse","getItem","employeeDobList","employeeReducer","state","action","instance","axios","baseURL","getEmployeesList","getEmployeesDobList","Employee","useSelector","useEffect","a","get","status","moment","format","console","log","App","reducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b22f186.chunk.js","sourcesContent":["export const setToLocal = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\nexport const getFromStorage = (key) => JSON.parse(localStorage.getItem(key));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './EmployeeCard.css';\r\n\r\nconst EmployeeCard = ({ firstName = '', lastName = '', showDateBirthday = false, onChange = () => { } }) => {\r\n    const highlightEmployee = showDateBirthday ? 'list-color' : 'list-name';\r\n\r\n    return (\r\n        <div>\r\n            <h3 className={highlightEmployee}>{`${firstName} ${lastName}`}</h3>\r\n            <form>\r\n                <div>\r\n                    <input\r\n                        id='active'\r\n                        type='radio'\r\n                        name='radioButton'\r\n                        onChange={() => onChange(true)}\r\n                        defaultChecked={showDateBirthday}\r\n                    />\r\n                    <label htmlFor='active'>active</label>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        id='notActive'\r\n                        type='radio'\r\n                        name='radioButton'\r\n                        onChange={() => onChange(false)}\r\n                        defaultChecked={!showDateBirthday}\r\n                    />\r\n                    <label htmlFor='notActive'>not active</label>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nEmployeeCard.propTypes = {\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    showDateBirthday: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default EmployeeCard;","export const SET_FINAL_LIST_EMPLOYEE = \"my-app/employees/SET_FINAL_LIST_EMPLOYEE\";\r\nexport const UPDATE_FINAL_LIST_EMPLOYEE = \"my-app/employees/UPDATE_FINAL_LIST_EMPLOYEE\";","import { SET_FINAL_LIST_EMPLOYEE, UPDATE_FINAL_LIST_EMPLOYEE } from './constants';\r\n\r\nexport const setFinalListEmployee = data => ({ type: SET_FINAL_LIST_EMPLOYEE, data });\r\nexport const updateFinalListEmployee = data => ({ type: UPDATE_FINAL_LIST_EMPLOYEE, data });","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport EmployeeCard from '../employeeCard/EmployeeCard';\r\nimport { updateFinalListEmployee } from '../../store/employeeReducer/action';\r\n\r\nimport './EmployeesList.css';\r\n\r\nconst EmployeesList = ({ employeesList = [] }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"list-employees\">Employees</div>\r\n            <div className=\"list-wr\">\r\n                {employeesList.map((item, letter) => {\r\n                    return (\r\n                        <div key={`employee-${letter}`} className=\"list-container-for-employee\">\r\n                            <h3 className=\"list-letter\">{item.letter}</h3>\r\n                            {item.employees.length > 0 ? (\r\n                                <ul>\r\n                                    {item.employees.map((employee) => {\r\n                                        const onChange = (flag) => {\r\n                                            employee.showDateBirthday = flag;\r\n                                            dispatch(updateFinalListEmployee([\r\n                                                ...employeesList,\r\n                                            ]))\r\n                                        }\r\n\r\n                                        return (\r\n                                            <li key={employee.id}>\r\n                                                <EmployeeCard {...employee} onChange={onChange} />\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                    )}\r\n                                </ul>\r\n                            ) : (\r\n                                <div>No Employees</div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nEmployeesList.propTypes = {\r\n    employeesList: PropTypes.array\r\n}\r\n\r\nexport default EmployeesList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './EmployeesDOBList.css';\r\n\r\nconst DateDOBList = ({ employeesList = [], employeesDobList = [] }) => {\r\n    const employeesWithDob = [];\r\n\r\n    employeesList.map((item) => {\r\n        item.employees.map(\r\n            (employee) =>\r\n                employee.showDateBirthday && employeesWithDob.push(employee),\r\n        );\r\n    });\r\n\r\n    employeesDobList.map((item) => {\r\n        employeesWithDob.map((employee) => {\r\n            if (item.month === employee.dob.split(' ')[1]) {\r\n                const id = item.employees.find((e) => e.id === employee.id);\r\n                !id && item.employees.push(employee);\r\n            }\r\n        });\r\n        item.employees = item.employees.filter((e) => e.showDateBirthday);\r\n        item.employees.sort((first, second) =>\r\n            second.lastName > first.lastName ? -1 : 1,\r\n        );\r\n    });\r\n\r\n    if (!employeesWithDob.length > 0) {\r\n        return (\r\n            <div className=\"list-dob-wr\">\r\n                <div className=\"list-title\">Employees birthday</div>\r\n\r\n                <div className=\"font\">Employees List is empty</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-dob-wr\">\r\n            <div className=\"list-title\">Employees birthday</div>\r\n\r\n            {employeesDobList.map((item, index) => (\r\n                <div key={`employee-dob-${index}`}>\r\n                    {item.employees.length > 0 ? (\r\n                        <>\r\n                            <div className=\"list-DOB\">{item.month}</div>\r\n                            <ul>\r\n                                {item.employees.map((employee) => (\r\n                                    <li key={`dob-${employee.id}`} className=\"list-dob-element\">\r\n                                        <div className=\"font-employee\">{`${employee.firstName} ${employee.lastName} ${employee.dob}`}</div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nDateDOBList.propTypes = {\r\n    employeesList: PropTypes.array,\r\n    employeesDobList: PropTypes.array,\r\n};\r\n\r\nexport default DateDOBList;\r\n","export const employeesWithLetter = [\r\n    {\r\n        letter: 'A',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'B',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'C',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'D',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'E',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'F',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'G',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'H',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'I',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'J',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'K',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'L',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'M',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'N',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'O',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'P',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'Q',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'R',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'S',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'T',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'U',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'V',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'W',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'X',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'Y',\r\n        employees: [],\r\n    },\r\n    {\r\n        letter: 'Z',\r\n        employees: [],\r\n    },\r\n];\r\n\r\nexport const employeesWithMonth = [\r\n    {\r\n        month: 'November',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'December',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'January',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'February',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'March',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'April',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'May',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'June',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'July',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'August',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'September',\r\n        employees: [],\r\n    },\r\n    {\r\n        month: 'October',\r\n        employees: [],\r\n    },\r\n];\r\n","import { SET_FINAL_LIST_EMPLOYEE, UPDATE_FINAL_LIST_EMPLOYEE } from './constants';\r\nimport { employeesWithMonth } from '../../constants';\r\nimport { getFromStorage, setToLocal } from '../../localStorage/storage';\r\n\r\nexport const initialState = {\r\n    finalListEmployee: getFromStorage('state') || [],\r\n    employeeDobList: employeesWithMonth,\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FINAL_LIST_EMPLOYEE:\r\n            return { ...state, finalListEmployee: action.data }\r\n        case UPDATE_FINAL_LIST_EMPLOYEE:\r\n            setToLocal('state', action.data);\r\n\r\n            return {\r\n                ...state,\r\n                finalListEmployee: action.data\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default employeeReducer;\r\n\r\n\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n baseURL: 'https://yalantis-react-school-api.yalantis.com/api',\r\n});\r\n\r\nexport const getEmployees = () => {\r\n return instance.get('/task0/users')\r\n};","export const getEmployeesList = state => state.employees.finalListEmployee;\r\nexport const getEmployeesDobList = state => state.employees.employeeDobList;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport EmployeesList from '../components/employeeList/EmployeesList';\r\nimport DateDOBList from '../components/employeeDOBList/EmployeesDOBList';\r\nimport { fetchEmployees } from '../store/employeeReducer/thunk';\r\nimport { getEmployeesDobList, getEmployeesList } from '../store/employeeReducer/selector';\r\n\r\nimport './employeesPage.css';\r\n\r\nconst Employee = () => {\r\n    const dispatch = useDispatch();\r\n    const employeesList = useSelector(getEmployeesList);\r\n    const employeesDobList = useSelector(getEmployeesDobList);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchEmployees());\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main-wr\">\r\n            <EmployeesList employeesList={employeesList} />\r\n            <DateDOBList employeesList={employeesList} employeesDobList={employeesDobList} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Employee;","import { employeesWithLetter } from '../../constants';\r\nimport moment from 'moment';\r\nimport { setFinalListEmployee } from './action';\r\nimport { initialState } from './reducer';\r\nimport { getEmployees } from '../../API/helper';\r\nimport { setToLocal } from '../../localStorage/storage';\r\n\r\nexport const fetchEmployees = () => async dispatch => {\r\n    if (initialState.finalListEmployee.length > 0) {\r\n        return\r\n    }\r\n\r\n    try {\r\n        const { data, status } = await getEmployees()\r\n\r\n        if (status === 200) {\r\n            data.sort((first, second) =>\r\n                second.firstName > first.firstName ? -1 : 1,\r\n            );\r\n            data.map((employee) => {\r\n                employee.showDateBirthday = false;\r\n                employee.dob = moment(employee.dob).format('D MMMM YYYY');\r\n            });\r\n\r\n            employeesWithLetter.map((item) => {\r\n                data.map((employee) => {\r\n                    employee.firstName[0] === item.letter && item.employees.push(employee);\r\n                });\r\n            });\r\n\r\n            setToLocal('state', employeesWithLetter)\r\n            dispatch(setFinalListEmployee(employeesWithLetter))\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n};","import React from 'react';\r\n\r\nimport Employee from './employeesPage/employeesPage';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Employee />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport employeeReducer from './employeeReducer/reducer';\r\n\r\nconst reducer = combineReducers({\r\n    employees: employeeReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunkMiddleware)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './store/store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}